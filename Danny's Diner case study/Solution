/* --------------------
Case Study Questions and solutions
--------------------*/

- - 1. What is the total amount each customer spent at the restaurant?

SELECT customer_id, sum(price) as total_price
from dannys_diner.sales a
join
dannys_diner.menu b
on a.product_id=b.product_id
group by customer_id

| customer_id | total_price |
| --- | --- |
| A | 76 |
| B | 74 |
| C | 36 |

-- 2. How many days has each customer visited the restaurant?

SELECT customer_id,count(distinct(order_date)) days_visited
from dannys_diner.sales
group by customer_id

| customer_id | days_visited |
| --- | --- |
| A | 4 |
| B | 6 |
| C | 2 |

-- 3. What was the first item from the menu purchased by each customer?

with cte as (SELECT customer_id,product_name,
dense_rank() over(partition by customer_id order by order_date asc) num
from dannys_diner.sales a
join
dannys_diner.menu b
on a.product_id=b.product_id
)
select customer_id,product_name
from cte
where num=1

| customer_id | product_name |
| --- | --- |
| A | sushi |
| A | curry |
| B | curry |
| C | ramen |
| C | ramen |

-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?

select (count(a.product_id)),product_name
from dannys_diner.sales a
join
dannys_diner.menu b
on a.product_id=b.product_id
group by a.product_id , product_name
order by 1 desc
limit 1

or

with cte as (SELECT product_name,
count(a.product_id) as cnt,
dense_rank() over(
ORDER BY count(a.product_id) DESC) AS rnk
from dannys_diner.sales a
join
dannys_diner.menu b
on a.product_id=b.product_id
GROUP BY product_name)
select product_name, cnt
from cte
where rnk=1

| product_name | cnt |
| --- | --- |
| ramen | 8 |

-- 5. Which item was the most popular for each customer?

with cte as (SELECT a.customer_id,product_name,
dense_rank() over(partition by a.customer_id
ORDER BY count(a.product_id) DESC) AS rnk
from dannys_diner.sales a
join
dannys_diner.menu b
on a.product_id=b.product_id
group by product_name,a.customer_id
)
select customer_id,product_name
from cte
where rnk=1

| customer_id | product_name |
| --- | --- |
| A | ramen |
| B | curry |
| B | sushi |
| B | ramen |
| C | ramen |

-- 6. Which item was purchased first by the customer after they became a member?  

with cte as (select a.customer_id ,b.product_name,
dense_rank()over(partition by a.customer_id order by a.order_date asc) rnk
from dannys_diner.sales a
join dannys_diner.menu b
on a.product_id=b.product_id
join dannys_diner.members c
on a.customer_id=c.customer_id
where a.order_date>=c.join_date)
select customer_id,product_name
from cte
where rnk=1

| customer_id | product_name |
| --- | --- |
| A | curry |
| B | sushi |

 7. Which item was purchased just before the customer became a member?

with cte as (select a.customer_id ,b.product_name,a.order_date,
dense_rank()over(partition by a.customer_id order by a.order_date desc) rnk
from dannys_diner.sales a
join dannys_diner.menu b
on a.product_id=b.product_id
join dannys_diner.members c
on a.customer_id=c.customer_id
where a.order_date<c.join_date)
select customer_id,product_name
from cte
where rnk=1

| customer_id | product_name |
| --- | --- |
| A | sushi |
| A | curry |
| B | sushi |

    8. What is the total items and amount spent for each member before they became a member?

select a.customer_id , count(distinct(a.product_id))as product_cnt, sum (b.price) as total_amountspent
from dannys_diner.sales a
join
dannys_diner.menu b
on a.product_id=b.product_id
join dannys_diner.members c
on a.customer_id = c.customer_id
where a.order_date < c.join_date
group by 1

| customer_id | product_cnt | total_amountspent |
| --- | --- | --- |
| A | 2 | 25 |
| B | 2 | 40 |

    
-- 9. If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?

select a.customer_id,
sum ( case when b.product_id = 1 then price * 20
else price * 10
end  )  as points
from dannys_diner.sales a
join
dannys_diner.menu b
on a.product_id=b.product_id
group by 1
order by 1

| customer_id | points |
| --- | --- |
| A | 860 |
| B | 940 |
| C | 360 |

 
-- 10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?

select a.customer_id,
sum(case when a.order_date between c.join_date and DATE_ADD(c.join_date,interval 6 day) then price * 20
when  b.product_id=1 then price * 20
else price *10
end) as points
from dannys_diner.sales a
join dannys_diner.menu b on a.product_id=b.product_id
join dannys_diner.members c on a.customer_id=c.customer_id
where a.order_date <='2021-01-31'
group by 1
order by 1

| customer_id | points |
| --- | --- |
| A | 1370 |
| B | 820 |
